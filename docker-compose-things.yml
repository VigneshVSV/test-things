version: "3"
services:
  coap-calculator-simple:
    labels:
      - traefik.udp.routers.coap-calculator-simple.entrypoints=coap-calculator-simple
    build:
      context: ./things/calculator/
      dockerfile: ./coap/js/Dockerfile-simple
      args:
        - PORT_ARG=${COAP_SIMPLE_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  coap-calculator-content-negotiation:
    labels:
      - traefik.udp.routers.coap-calculator-content-negotiation.entrypoints=coap-calculator-content-negotiation
    build:
      context: ./things/calculator/
      dockerfile: ./coap/js/Dockerfile-contentneg
      args:
        - PORT_ARG=${COAP_NEGOTIATION_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  http-express-calculator-simple:
    labels:
      - traefik.http.routers.http-express-calculator-simple.rule=PathPrefix(`/http-express-calculator-simple`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/express/Dockerfile-simple
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  http-express-calculator-content-negotiation:
    labels:
      - traefik.http.routers.http-express-calculator-content-negotiation.rule=PathPrefix(`/http-express-calculator-content-negotiation`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/express/Dockerfile-contentneg
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  http-flask-calculator:
    labels:
      - traefik.http.routers.http-flask-calculator.rule=PathPrefix(`/http-flask-calculator`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/flask/Dockerfile
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  mqtt-calculator:
    build:
      context: ./things/calculator/
      dockerfile: ./mqtt/js/Dockerfile
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  modbus-elevator:
    labels:
      - traefik.tcp.routers.modbus-elevator.entrypoints=modbus-elevator
      - traefik.tcp.routers.modbus-elevator.rule=HostSNI(`*`)
    environment:
      - BROKER_URI=${BROKER_URI}
    build:
      context: ./things/elevator/
      dockerfile: ./modbus/js/Dockerfile
      args:
        - PORT_ARG=${MODBUS_ELEVATOR_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  http-advanced-coffee-machine:
    labels:
      - traefik.http.routers.http-advanced-coffee-machine.rule=PathPrefix(`/http-advanced-coffee-machine`)
    build:
      context: ./things/advanced-coffee-machine
      dockerfile: ./http/ts/Dockerfile
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  http-data-schema-thing:
    labels:
      - traefik.http.routers.http-data-schema-thing.rule=PathPrefix(`/http-data-schema-thing`)
    build:
      context: ./things/data-schema-thing
      dockerfile: ./http/ts/Dockerfile
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  smart-home-presence-sensor:
    build:
      context: ./mashups/smart-home
      dockerfile: ./dockerfiles/presence-sensor.Dockerfile
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  smart-home-simple-coffee-machine:
    labels:
      # TD is not exposed since it contains hostname that cannot be accessed outside the docker network
      - traefik.http.routers.smart-home-simple-coffee-machine.rule=PathRegexp(`/smart-home-simple-coffee-machine/.+`)
    build:
      context: ./mashups/smart-home
      dockerfile: ./dockerfiles/simple-coffee-machine.Dockerfile
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      # Since mashup communicates inside the Docker network use of localhost in a TD result as
      # the mashup container's its own localhost. Therefore hostname given as their docker service name.
      # In production we will have a dedicated address and this issue won't be a problem.
      - SIMPLE_COFFEE_MACHINE_HOSTNAME=smart-home-simple-coffee-machine
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
  smart-home-smart-clock:
    labels:
      - traefik.udp.routers.smart-home-smart-clock.entrypoints=smart-home-smart-clock
    build:
      context: ./mashups/smart-home
      dockerfile: ./dockerfiles/smart-clock.Dockerfile
      args:
        - PORT_ARG=${SMART_HOME_SMART_CLOCK_PORT_OUT}
    environment:
      # Since mashup communicates inside the Docker network use of localhost in a TD result as
      # the mashup container's its own localhost. Therefore hostname given as their docker service name.
      # In production we will have a dedicated address and this issue won't be a problem.
      - SMART_CLOCK_HOSTNAME=smart-home-smart-clock
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 200M
        reservations:
          cpus: "0.01"
          memory: 50M
  smart-home-mashup:
    build:
      context: ./mashups/smart-home
      dockerfile: ./dockerfiles/mashup.Dockerfile
    environment:
      - SIMPLE_COFFEE_MACHINE_HOSTNAME=smart-home-simple-coffee-machine
      - PRESENCE_SENSOR_BROKER_URI=${BROKER_URI}
      - SMART_CLOCK_HOSTNAME=smart-home-smart-clock
      - SMART_CLOCK_PORT=${SMART_HOME_SMART_CLOCK_PORT_OUT}
    depends_on:
      - smart-home-presence-sensor
      - smart-home-simple-coffee-machine
      - smart-home-smart-clock
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
