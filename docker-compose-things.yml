version: "3"
services:
  coap-calculator-simple:
    labels:
      - traefik.udp.routers.coap-calculator-simple.entrypoints=coap-calculator-simple
    build:
      context: ./things/calculator/
      dockerfile: ./coap/js/Dockerfile-simple
      args:
        - PORT_ARG=${COAP_SIMPLE_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
        reservations:
          cpus: '0.001'
          memory: 25M
  coap-calculator-content-negotiation:
    labels:
      - traefik.udp.routers.coap-calculator-content-negotiation.entrypoints=coap-calculator-content-negotiation
    build:
      context: ./things/calculator/
      dockerfile: ./coap/js/Dockerfile-contentneg
      args:
        - PORT_ARG=${COAP_NEGOTIATION_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
        reservations:
          cpus: '0.001'
          memory: 25M
  http-express-calculator-simple:
    labels:
      - traefik.http.routers.http-express-calculator-simple.rule=PathPrefix(`/http-express-calculator-simple`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/express/Dockerfile-simple
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
      - LOKI_HOSTNAME=${LOKI_HOSTNAME}
      - LOKI_PORT=${LOKI_PORT}
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.01'
    #       memory: 50M
    #     reservations:
    #       cpus: '0.001'
    #       memory: 25M
    depends_on:
      - loki
    healthcheck:
          test: wget --no-verbose --tries=1 --spider http://${HOSTNAME}:${WEB_PORT_OUT}/http-express-calculator-simple || exit 1
          interval: ${HC_INTERVAL}
          timeout: ${HC_TIMEOUT}
          retries: ${HC_RETRIES}
          start_period: ${HC_START_PERIOD}
  http-express-calculator-content-negotiation:
    labels:
      - traefik.http.routers.http-express-calculator-content-negotiation.rule=PathPrefix(`/http-express-calculator-content-negotiation`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/express/Dockerfile-contentneg
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
        reservations:
          cpus: '0.001'
          memory: 25M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOSTNAME}:${WEB_PORT_OUT}/http-express-calculator-content-negotiation || exit 1
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
  http-flask-calculator:
    labels:
      - traefik.http.routers.http-flask-calculator.rule=PathPrefix(`/http-flask-calculator`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/flask/Dockerfile
      args:
        - PORT_ARG=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${HOSTNAME}
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
        reservations:
          cpus: '0.01'
          memory: 25M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOSTNAME}:${WEB_PORT_OUT}/http-flask-calculator || exit 1
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
  mqtt-calculator:
    build:
      context: ./things/calculator/
      dockerfile: ./mqtt/js/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
        reservations:
          cpus: '0.001'
          memory: 25M
  modbus-elevator:
    labels:
      - traefik.tcp.routers.modbus-elevator.entrypoints=modbus-elevator
      - traefik.tcp.routers.modbus-elevator.rule=HostSNI(`*`)
    environment:
      - BROKER_URI=${BROKER_URI}
    build:
      context: ./things/elevator/
      dockerfile: ./modbus/js/Dockerfile
      args:
        - PORT_ARG=${MODBUS_ELEVATOR_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
        reservations:
          cpus: '0.001'
          memory: 25M
      